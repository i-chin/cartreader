name: Monthly Release

on:
  schedule:
    - cron: '0 0 21 * *'  # Runs at 00:00 on the 1st of every month
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: cmd

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build OSCR Release
        run: |
          @chcp 65001 > nul
          @echo off
          echo Creating OSCR Release
          echo Current task:
          echo.
          echo.
          echo.
          echo.
          echo.
          echo.
          echo Log:

          echo Downloading Arduino IDE
          IF EXIST oscr_release rmdir oscr_release /s /q
          mkdir oscr_release
          cd oscr_release
          powershell Invoke-WebRequest https://downloads.arduino.cc/arduino-1.8.19-windows.zip -OutFile arduino-1.8.19-windows.zip
          powershell expand-archive arduino-1.8.19-windows.zip
          del arduino-1.8.19-windows.zip
          cd arduino-1.8.19-windows
          ren arduino-1.8.19 "Arduino IDE"
          move "Arduino IDE" ..\"Arduino IDE" >nul
          cd..
          IF EXIST arduino-1.8.19-windows rmdir arduino-1.8.19-windows /s /q

          echo Downloading OSCR sketch
          powershell Invoke-WebRequest https://github.com/sanni/cartreader/archive/refs/heads/master.zip -OutFile master.zip
          powershell expand-archive master.zip
          mkdir "Arduino IDE\portable\sketchbook\libraries"
          move master\cartreader-master\Cart_Reader "Arduino IDE\portable\sketchbook" >nul
          move master\cartreader-master\sd >nul
          move master\cartreader-master\LICENSE LICENSE.txt >nul
          rename sd "SD Card"
          IF EXIST "SD Card\README.md" del "SD Card\README.md"
          IF EXIST "Arduino IDE\portable\sketchbook\Cart_Reader\README.md" del "Arduino IDE\portable\sketchbook\Cart_Reader\README.md"
          IF EXIST "Arduino IDE\portable\sketchbook\Cart_Reader\LICENSE.txt" del "Arduino IDE\portable\sketchbook\Cart_Reader\LICENSE.txt"
          IF EXIST master rmdir master /s /q
          IF EXIST master.zip del master.zip /q

          echo Downloading Libraries
          set LIBS=greiman/SdFat olikraus/U8g2_Arduino adafruit/Adafruit_NeoPixel mathertel/RotaryEncoder etherkit/Si5351Arduino adafruit/RTClib adafruit/Adafruit_BusIO PaulStoffregen/FreqCount
          for %%L in (%LIBS%) do (
            powershell Invoke-WebRequest https://github.com/%%~L/archive/refs/heads/master.zip -OutFile master.zip
            powershell expand-archive master.zip
            for /F "tokens=2 delims=/" %%A in ("%%L") do move master\%%A-master "Arduino IDE\portable\sketchbook\libraries" > nul
            IF EXIST master rmdir master /s /q
            IF EXIST master.zip del master.zip /q
          )

          echo Downloading CH341 driver
          powershell Invoke-WebRequest https://www.wch.cn/download/file?id=5 -OutFile drivers.zip
          powershell expand-archive drivers.zip
          move drivers\CH341SER CH341SER >nul
          ren CH341SER "CH341 Drivers"
          IF EXIST drivers rmdir drivers /s /q
          IF EXIST drivers.zip del drivers.zip /q

          echo Creating README.txt
          (
            echo 1^) Install CH341 Drivers by running SETUP.exe in the "CH341 Drivers" folder
            echo 2^) Launch arduino.exe found in "Arduino IDE" directory
            echo 3^) In the Arduino IDE go File -^> Sketchbook -^> Cart_Reader
            echo 4^) Then Tools -^> Board and select "Arduino/Genduino Mega or Mega 2560"
            echo 5^) Followed by Tools -^> Port and select your Arduino
            echo 6^) In Config.h define your HW version by removing // in front of "#define HWX" where X is your hardware version
            echo 7^) Next Sketch -^> Upload
            echo 8^) Verify that the upload didn't give you any errors
            echo 9^) Copy the content of the "SD Card" folder to the root of your SD card
            echo 10^) Mark the *.txt files as hidden
            echo.
            echo More info: https://github.com/sanni/cartreader/wiki
          ) > README.txt

          echo Creating RESTORE.bat
          (
            echo @echo off
            echo echo Please unplug any Arduinos or similar devices that are not the OSCR you want to restore.
            echo pause
            echo echo.
            echo pnputil /enum-devices /class "Ports"
            echo set /p "comportnum=Enter COM Port number of connected OSCR, usually displayed as USB-SERIAL CH340 (COM?), e.g. 8: "
            echo echo.
            echo echo Restoring backup of previously saved firmware...
            echo "Arduino IDE\hardware\tools\avr\bin\avrdude.exe" -C "Arduino IDE\hardware\tools\avr\etc\avrdude.conf" -D -c wiring -P COM%%comportnum%% -b 115200 -p m2560 -U flash:w:backup.hex 
            echo pause 
          ) > RESTORE.bat

          echo Creating BACKUP.bat
          (
            echo @echo off
            echo echo Please unplug any Arduinos or similar devices that are not the OSCR you want to backup.
            echo pause
            echo echo.
            echo pnputil /enum-devices /class "Ports"
            echo set /p "comportnum=Enter COM Port number of connected OSCR, usually displayed as USB-SERIAL CH340 (COM?), e.g. 8: "
            echo echo.
            echo echo Creating backup of current firmware...
            echo "Arduino IDE\hardware\tools\avr\bin\avrdude.exe" -C "Arduino IDE\hardware\tools\avr\etc\avrdude.conf" -c wiring -P COM%%comportnum%% -b 115200 -p m2560 -U flash:r:backup.hex
            echo pause 
          ) > BACKUP.bat

          echo Creating UPDATE.bat
          (
            echo @echo off
            echo.
            echo rem echo Delete old version
            echo IF EXIST "Arduino IDE\portable\sketchbook\Cart_Reader" rmdir "Arduino IDE\portable\sketchbook\Cart_Reader" /s /q
            echo IF EXIST "SD Card" rmdir "SD Card" /s /q
            echo IF EXIST master rmdir master /s /q
            echo IF EXIST master.zip del master.zip /q
            echo IF EXIST LICENSE.txt del LICENSE.txt /q
            echo.
            echo echo Downloading latest OSCR version from github.com/sanni/cartreader
            echo powershell Invoke-WebRequest https://github.com/sanni/cartreader/archive/refs/heads/master.zip -OutFile master.zip
            echo rem Extracting
            echo powershell expand-archive master.zip
            echo.
            echo rem Moving to sub-folders
            echo move master\cartreader-master\Cart_Reader "Arduino IDE\portable\sketchbook" ^>nul
            echo move master\cartreader-master\sd ^>nul
            echo move master\cartreader-master\LICENSE LICENSE.txt ^>nul
            echo rename sd "SD Card"
            echo.
            echo rem Clean-up
            echo IF EXIST "SD Card\README.md" del "SD Card\README.md"
            echo IF EXIST "Arduino IDE\portable\sketchbook\Cart_Reader\README.md" del "Arduino IDE\portable\sketchbook\Cart_Reader\README.md"
            echo IF EXIST "Arduino IDE\portable\sketchbook\Cart_Reader\LICENSE.txt" del "Arduino IDE\portable\sketchbook\Cart_Reader\LICENSE.txt"
            echo IF EXIST master rmdir master /s /q
            echo IF EXIST master.zip del master.zip /q
            echo cls
            echo.
            echo rem Start Arduino IDE
            echo "Arduino IDE\arduino.exe" "Arduino IDE\portable\sketchbook\Cart_Reader\Cart_Reader.ino"
            echo.
            echo echo README
            echo echo.
            echo echo First go to "Tools" then "Port" and select your Arduino's COM Port
            echo echo If you can't find the Arduino there you need to install the CH341 drivers
            echo echo.
            echo echo Now select the "Config.h" tab and define your HW version by removing // in front of e.g. "#define HW5"
            echo echo There you can also remove // in front of e.g. "//#define ENABLE_C64" to enable more systems
            echo echo.
            echo echo Select "Sketch" then "Upload" and wait until the flashing is done
            echo echo If you get an error message about exceeding available space you need to disable some of the systems
            echo echo.
            echo echo Next copy the content of the "SD Card" folder to your SD card
            echo echo Finally mark the *.txt files on the SD as hidden so they are not visible in the OSCRs file browser
            echo echo.
            echo echo You can find more detailed instructions in the Wiki
            echo echo https://github.com/sanni/cartreader/wiki
            echo echo.
            echo.
            echo set /p driverinstall="Do you want to install the CH341 Drivers? (Y/N)"
            echo if %%driverinstall%%==Y "CH341 Drivers\SETUP.exe"
            echo if %%driverinstall%%==y "CH341 Drivers\SETUP.exe"
            echo echo.
            echo.
            echo set /p makebackup="Do you want to make a backup of your current firmware? (Y/N)"
            echo echo.
            echo if %%makebackup%%==Y "BACKUP.bat"
            echo if %%makebackup%%==y "BACKUP.bat"
            echo echo.
            echo.
            echo set /p close="Press any key to close this window"
          ) > UPDATE.bat

          echo Optimize U8g2 for size
          cd "Arduino IDE\portable\sketchbook\libraries\U8g2_Arduino-master\src\clib\"
          powershell -Command "(gc u8g2.h) -replace '#define U8G2_16BIT', '//#define U8G2_16BIT' | Out-File -encoding ASCII u8g2.h"
          powershell -Command "(gc u8g2.h) -replace '#define U8G2_WITH_HVLINE_SPEED_OPTIMIZATION', '//#define U8G2_WITH_HVLINE_SPEED_OPTIMIZATION' | Out-File -encoding ASCII u8g2.h"
          powershell -Command "(gc u8g2.h) -replace '#define U8G2_WITH_INTERSECTION', '//#define U8G2_WITH_INTERSECTION' | Out-File -encoding ASCII u8g2.h"
          powershell -Command "(gc u8g2.h) -replace '#define U8G2_WITH_CLIP_WINDOW_SUPPORT', '//#define U8G2_WITH_CLIP_WINDOW_SUPPORT' | Out-File -encoding ASCII u8g2.h"
          powershell -Command "(gc u8g2.h) -replace '#define U8G2_WITH_FONT_ROTATION', '//#define U8G2_WITH_FONT_ROTATION' | Out-File -encoding ASCII u8g2.h"
          powershell -Command "(gc u8g2.h) -replace '#define U8G2_WITH_UNICODE', '//#define U8G2_WITH_UNICODE' | Out-File -encoding ASCII u8g2.h"
          cd..
          cd..
          cd..
          cd..
          cd..
          cd..
          cd..

          echo Create oscr_release.zip
          cd..
          powershell compress-archive -Path oscr_release -DestinationPath oscr_release.zip
          IF EXIST oscr_release rmdir oscr_release /s /q

      - name: Get current date
        id: date
        shell: pwsh
        run: |
          $date = Get-Date -Format yyyyMMdd
          echo "date=$date" >> $env:GITHUB_OUTPUT

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.date.outputs.date }}
          name: ${{ steps.date.outputs.date }}
          body: Automated monthly OSCR release
          files: oscr_release.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
